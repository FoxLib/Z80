// ---------------------------------------------------------------------
// Объявление регистров
// ---------------------------------------------------------------------

// Основной набор
reg  [7:0]   r8[8];

// Для отладчика
wire [ 7:0]  b = r8[0];
wire [ 7:0]  c = r8[1];
wire [ 7:0]  d = r8[2];
wire [ 7:0]  e = r8[3];
wire [ 7:0]  h = r8[4];
wire [ 7:0]  l = r8[5];
wire [ 7:0]  f = r8[6]; // Здесь обычно (HL)
wire [ 7:0]  a = r8[7];

// Специальные
reg [ 7:0]  i = 8'h00;
reg [ 7:0]  r = 8'h00;

// Управляющие регистры
reg [15:0]  pc = 16'h0000;
reg [15:0]  sp = 16'hdffe;
reg [15:0]  ix = 16'h0000;
reg [15:0]  iy = 16'h0000;
reg [ 1:0]  imode = 2'b00;
reg         iff1;
reg         iff2;

// 8x8 Дополнительный набор регистров
reg [63:0]  prime;

// ---------------------------------------------------------------------
// Внутреннее состояние процессора
// ---------------------------------------------------------------------

// Фаза исполнения инструкции
reg [ 4:0]  t_state = 1'b0;

// Указатель шины. Если =1, то указывает на `cc`, иначе на `pc`
reg         bus = 1'b0;

// `cc` current cursor, указатель на память в случае bus=1
reg [15:0]  cc  = 16'h00;

// Задержка при получении данных от шины
reg [ 2:0]  latency = 2'h2;

// Защелка для хранения последнего опкода
reg [ 7:0]  opcode  = 8'hFF;

// Конвейер
reg [ 7:0]  d0;

// ---------------------------------------------------------------------
// Инициализация
// ---------------------------------------------------------------------

initial begin

    W  = 1'b0;
    DO = 8'h00;

    r8[0] = 8'h00; r8[4] = 8'h00;
    r8[1] = 8'h00; r8[5] = 8'h00;
    r8[2] = 8'h00; r8[6] = 8'h00;
    r8[3] = 8'h00; r8[7] = 8'h00;

end
